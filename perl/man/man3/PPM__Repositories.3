.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Repositories 3"
.TH Repositories 3 "2014-10-22" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PPM::Repositories \- List of Perl Package Manager repositories
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\&    # Print all repositories for all architectures
\&    use PPM::Repositories qw(get list used_archs);
\&    for my $arch (used_archs()) {
\&        print "$arch\en";
\&        for my $name (list($arch)) {
\&            my %repo = get($name, $arch);
\&            next unless $repo{packlist};
\&            print "  $name\en";
\&            for my $field (sort keys %repo) {
\&                printf "    %\-12s %s\en", $field, $repo{$field};
\&            }
\&        }
\&    }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module contains a list of \s-1PPM\s0 repositories for Perl 5.6 and later.
For backwards compatibility reasons it exposes the data in 2 different
mechanism.
.PP
The new interface uses \s-1API\s0 functions and is supplied for the benefit
of \s-1PPM\s0 version 4 and later.  The old interface directly exposes the
\&\f(CW%Repositories\fR hash and should be used for \s-1PPM\s0 version 2 and 3.
.SS "The new interface"
.IX Subsection "The new interface"
The \*(L"new\*(R" interface is aimed primarily at \s-1PPM\s0 version 4 users, but also
contains information about Perl 5.6 and 5.8 repositories that can be
used by \s-1PPM\s0 version 2 and 3.
.IP "get(\s-1NAME, ARCH\s0)" 4
.IX Item "get(NAME, ARCH)"
The \fBget()\fR function returns a hash describing the \s-1NAME\s0 repository
for architecture \s-1ARCH.\s0 It looks like this:
.Sp
.Vb 6
\&  (
\&    home            => \*(Aqhttp://cpan.example.com/\*(Aq,
\&    desc            => \*(AqExample Repository\*(Aq,
\&    packlist        => \*(Aqhttp://cpan.example.com/PPMPackages/10xx/\*(Aq,
\&    packlist_noarch => \*(Aqhttp://cpan.example.com/PPMPackages/noarch/\*(Aq,
\&  )
.Ve
.Sp
The \f(CW\*(C`home\*(C'\fR key provides a \s-1URL\s0 that will display additional information
about the repository in a browser (for human consumption, not structured
data for any tools).
.Sp
The \f(CW\*(C`desc\*(C'\fR key contains a description string, giving either a more
verbose description of the repository host, or an indication of the
provided content for more specialized repositories (e.g. \f(CW"gtk2\-perl bindings"\fR).
.Sp
The \f(CW\*(C`packlist\*(C'\fR key will point to the repository for the architecture
\&\s-1ARCH\s0 and will only be defined if the repository supports this
architecture.  Similarly the \f(CW\*(C`packlist_noarch\*(C'\fR key may point to an
architecture-independent repository hosted by the same system.  Either
or both of \f(CW\*(C`packlist\*(C'\fR and \f(CW\*(C`packlist_noarch\*(C'\fR may be undefined.
.Sp
\&\s-1ARCH\s0 will default to the current Perl version and architecture (it is
the same as \f(CW$Config\fR{archname} under Perl 5.6, and has the major Perl
version appended for later versions, such as \*(L"$Config{archname}\-5.8\*(R"
for Perl 5.8).
.Sp
The \fBget()\fR function will return an empty list if the repository \s-1NAME\s0
does not exist at all.
.IP "list(\s-1ARCH\s0)" 4
.IX Item "list(ARCH)"
The \fBlist()\fR function returns a list of names for all repositories that
contain modules for architecture \s-1ARCH.\s0  This will include all
repositories providing architecture-independent modules as well.
.Sp
\&\s-1ARCH\s0 will default to the current Perl version and architecture.
.IP "\fBused_archs()\fR" 4
.IX Item "used_archs()"
This function returns a list of all architectures that have at least
one repository recorded in this module.  This list will include the
pseudo-architecture \f(CW\*(C`noarch\*(C'\fR for architecture-independent modules.
.SS "The old interface"
.IX Subsection "The old interface"
The \*(L"old\*(R" interface is supported mainly for backwards compatibility. It
uses the old structure layout, and continues to list \s-1SOAP\s0 style
repositories (called \*(L"PPMServer\*(R") that are no longer supported in \s-1PPM\s0
version 4.
.ie n .IP "%Repositories" 4
.el .IP "\f(CW%Repositories\fR" 4
.IX Item "%Repositories"
An example entry in \f(CW%Repositories\fR looks like:
.Sp
.Vb 8
\&    bribes => {
\&        location => \*(Aqhttp://www.bribes.org/perl/ppm/\*(Aq,
\&        Type     => \*(AqWebpage\*(Aq,
\&        Active   => 1,
\&        Notes    => \*(AqDigest::*, Net::Pcap, Win32::* ...\*(Aq,
\&        PerlV    => [ 5.6, 5.8 ],
\&        PerlO    => [\*(AqMSWin32\*(Aq],
\&    },
.Ve
.Sp
The meaning of the key/value pairs should be obvious.
.Sp
Active is either 1, or 0, and it indicates whether or not that
particular repository was reachable and contained ppm packages at the
time this module was released.
.Sp
PerlO is the value of $^O.  See perlport for a list of values for
this variable.
.SS "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
\&\f(CW%Repositories\fR is exported by default.
.PP
\&\fBget()\fR, \fBlist()\fR, and \fBused_archs()\fR are only exported on demand.
.SH "BUGS/ADDITIONS/ETC"
.IX Header "BUGS/ADDITIONS/ETC"
Please use https://rt.cpan.org/NoAuth/Bugs.html?Dist=PPM\-Repositories
to report bugs, request additions etc.
.SH "AUTHOR"
.IX Header "AUTHOR"
D.H. (PodMaster)
.PP
Maintained since 2008 by Jan Dubois <jand@activestate.com>
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (c) 2003,2004,2005 by D.H. (PodMaster). All rights reserved.
.PP
This module is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1PPM\s0, PPM::Make, \s-1CPANPLUS\s0, \s-1CPAN\s0.
