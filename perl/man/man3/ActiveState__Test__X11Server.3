.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "ActiveState::Test::X11Server 3"
.TH ActiveState::Test::X11Server 3 "2017-06-23" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ActiveState::Test::X11Server \- Provides an available X11 Server
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\& use ActiveState::Test::X11Server;
\& my $x11 = ActiveState::Test::X11Server\->new;
\& local $ENV{DISPLAY} = $x11\->display;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This modules tries to produces a valid X11 server from thin air.
.PP
It will try to locate Xvfb and start one. Failing that, it will
try and request a new X11 server remotely, thru a simple \s-1REST API,\s0
failing that, it will default to some shared X11 server.
.PP
This module was designed with testing in mind, but might have usages
beyond that. Keep in mind that if it does fallback to a shared X11
server, you might experience test failures as many people might be
connecting to that server simultaneously. Otherwise, the provided
X11 server is your alone.
.SH "CONFIGURATIONS"
.IX Header "CONFIGURATIONS"
Configuration options are passed to the constructor and are:
.IP "debug (\s-1BOOLEAN\s0)" 4
.IX Item "debug (BOOLEAN)"
Wether to be verbose or not
.Sp
Default: Off
.IP "order (\s-1ARRAY REF\s0)" 4
.IX Item "order (ARRAY REF)"
Determines the order in which to try to acquire an X server
.Sp
Default: local, managed, remote
.IP "local (Integer)" 4
.IX Item "local (Integer)"
Specifies the range of \s-1DISPLAY\s0 setting to try before giving up. Higher
values might take longer (up to a few second each)
.Sp
Default: 20
.IP "managed (\s-1ARRAY REF\s0)" 4
.IX Item "managed (ARRAY REF)"
This is the recommended mechanism. It dynamically requests a X11 server
from a remote server, and gets a newly created one.
.Sp
Configured as a remote \s-1URL\s0 implemented by ActiveState::Test::X11Server::Apache
.IP "remote (\s-1ARRAY REF\s0)" 4
.IX Item "remote (ARRAY REF)"
A shared remote X11 server that requires no setting up. Most likely shared
by others, and only good as a last resort.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
<ActiveState::Test::X11Server::Apache>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2005 ActiveState Corp.  All rights reserved.
