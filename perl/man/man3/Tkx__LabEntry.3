.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Tkx::LabEntry 3"
.TH Tkx::LabEntry 3 "2009-11-29" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Tkx::LabEntry \- Labeled entry widget
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use Tkx;
\&  use Tkx::LabEntry;
\&
\&  my $mw = Tkx::widget\->new(".");
\&
\&  my $e = $mw\->new_tkx_LabEntry(\-label => "Name");
\&  $e\->g_pack;
\&
\&  my $b = $mw\->new_button(
\&      \-text => "Done",
\&      \-command => sub {
\&          print $e\->get, "\en";
\&          $mw\->g_destroy;
\&      },
\&  );
\&  $b\->g_pack;
\&
\&  Tkx::MainLoop();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \f(CW\*(C`Tkx::LabEntry\*(C'\fR module implements a trivial megawidget.  Its main
purpose is to demonstrate how to use the \f(CW\*(C`Tkx::MegaConfig\*(C'\fR baseclass.
.PP
Once the \f(CW\*(C`Tkx::LabEntry\*(C'\fR module has been loaded, then its widgets
can be constructed in the normal way using the \f(CW\*(C`tkx_LabEntry\*(C'\fR name.
Besides having a label (whose text can be accessed with the \f(CW\*(C`\-label\*(C'\fR
configuration option), these widgets behave exactly like an \f(CW\*(C`entry\*(C'\fR
would.
.SH "LICENSE"
.IX Header "LICENSE"
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.PP
Copyright 2005 ActiveState.  All rights reserved.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The source code of Tkx::LabEntry.
.PP
Tkx::MegaConfig, Tkx
