.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "TAP::Formatter::Session 3"
.TH TAP::Formatter::Session 3 "2017-04-06" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
TAP::Formatter::Session \- Abstract base class for harness output delegate
.SH "VERSION"
.IX Header "VERSION"
Version 3.39
.SH "METHODS"
.IX Header "METHODS"
.SS "Class Methods"
.IX Subsection "Class Methods"
\fI\f(CI\*(C`new\*(C'\fI\fR
.IX Subsection "new"
.PP
.Vb 4
\& my %args = (
\&    formatter => $self,
\& )
\& my $harness = TAP::Formatter::Console::Session\->new( \e%args );
.Ve
.PP
The constructor returns a new \f(CW\*(C`TAP::Formatter::Console::Session\*(C'\fR object.
.IP "\(bu" 4
\&\f(CW\*(C`formatter\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`parser\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`name\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`show_count\*(C'\fR
.PP
\fI\f(CI\*(C`header\*(C'\fI\fR
.IX Subsection "header"
.PP
Output test preamble
.PP
\fI\f(CI\*(C`result\*(C'\fI\fR
.IX Subsection "result"
.PP
Called by the harness for each line of \s-1TAP\s0 it receives.
.PP
\fI\f(CI\*(C`close_test\*(C'\fI\fR
.IX Subsection "close_test"
.PP
Called to close a test session.
.PP
\fI\f(CI\*(C`clear_for_close\*(C'\fI\fR
.IX Subsection "clear_for_close"
.PP
Called by \f(CW\*(C`close_test\*(C'\fR to clear the line showing test progress, or the parallel
test ruler, prior to printing the final test result.
.PP
\fI\f(CI\*(C`time_report\*(C'\fI\fR
.IX Subsection "time_report"
.PP
Return a formatted string about the elapsed (wall-clock) time
and about the consumed \s-1CPU\s0 time.
