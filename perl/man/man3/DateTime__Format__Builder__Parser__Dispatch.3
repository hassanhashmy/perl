.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DateTime::Format::Builder::Parser::Dispatch 3"
.TH DateTime::Format::Builder::Parser::Dispatch 3 "2013-04-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
DateTime::Format::Builder::Parser::Dispatch \- Dispatch parsers by group
.SH "VERSION"
.IX Header "VERSION"
version 0.81
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\&    package SampleDispatch;
\&    use DateTime::Format::Builder
\&    (
\&        parsers => {
\&            parse_datetime => [
\&                {
\&                    Dispatch => sub {
\&                        return \*(Aqfnerk\*(Aq;
\&                    }
\&                }
\&            ]
\&        },
\&        groups => {
\&            fnerk => [
\&                {
\&                    regex => qr/^(\ed{4})(\ed\ed)(\ed\ed)$/,
\&                    params => [qw( year month day )],
\&                },
\&            ]
\&        }
\&    );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Dispatch\*(C'\fR adds another parser type to \f(CW\*(C`Builder\*(C'\fR permitting
dispatch of parsing according to group names.
.SH "SPECIFICATION"
.IX Header "SPECIFICATION"
\&\f(CW\*(C`Dispatch\*(C'\fR has just one key: \f(CW\*(C`Dispatch\*(C'\fR. The value should be a
reference to a subroutine that returns one of:
.IP "\(bu" 4
\&\f(CW\*(C`undef\*(C'\fR, meaning no groups could be found.
.IP "\(bu" 4
An empty list, meaning no groups could be found.
.IP "\(bu" 4
A single string, meaning: use this group
.IP "\(bu" 4
A list of strings, meaning: use these groups in this order.
.PP
Groups are specified much like the example in the \s-1SYNOPSIS\s0.
They follow the same format as when you specify them for methods.
.SH "SIDEEFFECTS"
.IX Header "SIDEEFFECTS"
Your group parser can also be a Dispatch parser. Thus you could
potentially end up with an infinitely recursive parser.
.SH "SUPPORT"
.IX Header "SUPPORT"
See DateTime::Format::Builder for details.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\f(CW\*(C`datetime@perl.org\*(C'\fR mailing list.
.PP
http://datetime.perl.org/
.PP
perl, DateTime,
DateTime::Format::Builder
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Dave Rolsky <autarch@urth.org>
.IP "\(bu" 4
Iain Truskett
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2013 by Dave Rolsky.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Artistic License 2.0 (GPL Compatible)
.Ve
