.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Locale::Script 3"
.TH Locale::Script 3 "2017-11-17" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Locale::Script \- module for dealing with script code sets
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&   use Locale::Script;
\&
\&   $name = code2script(CODE);
\&   $code = script2code(NAME);
\&
\&   @codes   = all_script_codes();
\&   @names   = all_script_names();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides access to script code sets.
.PP
Please refer to the Locale::Codes::Types document for a description
of the code sets available.
.PP
Most of the routines take an optional additional argument which
specifies the code set to use. The code set can be specified using the
name of a code set, or the perl constant specified in the above
document.  If not specified, the default code set will be used.
.SH "ROUTINES"
.IX Header "ROUTINES"
All routines in this module call the appropriate method in the
Locale::Codes module, using an object of type: script
Please refer to the documentation of the Locale::Codes module
for details about each function.
.PP
The following functions are exported automatically:
.IP "\fBcode2script(\s-1CODE\s0 [,CODESET] [,'retired'])\fR" 4
.IX Item "code2script(CODE [,CODESET] [,'retired'])"
See \fBcode2name\fR in Locale::Codes
.IP "\fBscript2code(\s-1NAME\s0 [,CODESET] [,'retired'])\fR" 4
.IX Item "script2code(NAME [,CODESET] [,'retired'])"
See \fBname2code\fR in Locale::Codes
.IP "\fBscript_code2code(\s-1CODE ,CODESET ,CODESET2\s0)\fR" 4
.IX Item "script_code2code(CODE ,CODESET ,CODESET2)"
See \fBcode2code\fR in Locale::Codes
.IP "\fBall_script_codes([\s-1CODESET\s0] [,'retired'])\fR" 4
.IX Item "all_script_codes([CODESET] [,'retired'])"
See \fBall_codes\fR in Locale::Codes
.IP "\fBall_script_names([\s-1CODESET\s0] [,'retired'])\fR" 4
.IX Item "all_script_names([CODESET] [,'retired'])"
See \fBall_names\fR in Locale::Codes
.PP
The following functions are not exported and must be called fully
qualified with the package name:
.IP "\fBLocale::Script::show_errors(\s-1FLAG\s0)\fR" 4
.IX Item "Locale::Script::show_errors(FLAG)"
By default, invalid input will produce empty results, but no errors.  By
passing in a non-zero value of \s-1FLAG,\s0 errors will be produced.
.Sp
See \fBshow_errors\fR in Locale::Codes but note that the default for
the non-OO modules are to \s-1NOT\s0 produce errors.
.IP "\fBLocale::Script::rename_script(\s-1CODE ,NEW_NAME\s0 [,CODESET])\fR" 4
.IX Item "Locale::Script::rename_script(CODE ,NEW_NAME [,CODESET])"
See \fBrename_code\fR in Locale::Codes
.IP "\fBLocale::Script::add_script(\s-1CODE ,NAME\s0 [,CODESET])\fR" 4
.IX Item "Locale::Script::add_script(CODE ,NAME [,CODESET])"
See \fBadd_code\fR in Locale::Codes
.IP "\fBLocale::Script::delete_script(\s-1CODE\s0 [,CODESET])\fR" 4
.IX Item "Locale::Script::delete_script(CODE [,CODESET])"
See \fBdelete_code\fR in Locale::Codes
.IP "\fBLocale::Script::add_script_alias(\s-1NAME ,NEW_NAME\s0)\fR" 4
.IX Item "Locale::Script::add_script_alias(NAME ,NEW_NAME)"
See \fBadd_alias\fR in Locale::Codes
.IP "\fBLocale::Script::delete_script_alias(\s-1NAME\s0)\fR" 4
.IX Item "Locale::Script::delete_script_alias(NAME)"
See \fBdelete_alias\fR in Locale::Codes
.IP "\fBLocale::Script::rename_script_code(\s-1CODE ,NEW_CODE\s0 [,CODESET])\fR" 4
.IX Item "Locale::Script::rename_script_code(CODE ,NEW_CODE [,CODESET])"
See \fBreplace_code\fR in Locale::Codes
.IP "\fBLocale::Script::add_script_code_alias(\s-1CODE ,NEW_CODE\s0 [,CODESET])\fR" 4
.IX Item "Locale::Script::add_script_code_alias(CODE ,NEW_CODE [,CODESET])"
See \fBadd_code_alias\fR in Locale::Codes
.IP "\fBLocale::Script::delete_script_code_alias(\s-1CODE\s0 [,CODESET])\fR" 4
.IX Item "Locale::Script::delete_script_code_alias(CODE [,CODESET])"
See \fBdelete_code_alias\fR in Locale::Codes
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "Locale::Codes" 4
.IX Item "Locale::Codes"
The Locale-Codes distribution.
.SH "AUTHOR"
.IX Header "AUTHOR"
See Locale::Codes for full author history.
.PP
Currently maintained by Sullivan Beck (sbeck@cpan.org).
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.Vb 1
\&   Copyright (c) 2011\-2017 Sullivan Beck
.Ve
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
