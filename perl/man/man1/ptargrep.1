.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PTARGREP 1"
.TH PTARGREP 1 "2016-07-27" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ptargrep \- Apply pattern matching to the contents of files in a tar archive
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  ptargrep [options] <pattern> <tar file> ...
\&
\&  Options:
\&
\&   \-\-basename|\-b     ignore directory paths from archive
\&   \-\-ignore\-case|\-i  do case\-insensitive pattern matching
\&   \-\-list\-only|\-l    list matching filenames rather than extracting matches
\&   \-\-verbose|\-v      write debugging message to STDERR
\&   \-\-help|\-?         detailed help message
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This utility allows you to apply pattern matching to \fBthe contents\fR of files
contained in a tar archive.  You might use this to identify all files in an
archive which contain lines matching the specified pattern and either print out
the pathnames or extract the files.
.PP
The pattern will be used as a Perl regular expression (as opposed to a simple
grep regex).
.PP
Multiple tar archive filenames can be specified \- they will each be processed
in turn.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-basename\fR (alias \-b)" 4
.IX Item "--basename (alias -b)"
When matching files are extracted, ignore the directory path from the archive
and write to the current directory using the basename of the file from the
archive.  Beware: if two matching files in the archive have the same basename,
the second file extracted will overwrite the first.
.IP "\fB\-\-ignore\-case\fR (alias \-i)" 4
.IX Item "--ignore-case (alias -i)"
Make pattern matching case-insensitive.
.IP "\fB\-\-list\-only\fR (alias \-l)" 4
.IX Item "--list-only (alias -l)"
Print the pathname of each matching file from the archive to \s-1STDOUT.\s0  Without
this option, the default behaviour is to extract each matching file.
.IP "\fB\-\-verbose\fR (alias \-v)" 4
.IX Item "--verbose (alias -v)"
Log debugging info to \s-1STDERR.\s0
.IP "\fB\-\-help\fR (alias \-?)" 4
.IX Item "--help (alias -?)"
Display this documentation.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010 Grant McLean <grantm@cpan.org>
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
