.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PERLCRITIC-GUI 1"
.TH PERLCRITIC-GUI 1 "2017-06-23" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "PerlCritic \- Graphical Interface"
.IX Header "PerlCritic - Graphical Interface"
.SH "Overview of the Interface"
.IX Header "Overview of the Interface"
\&\fBPerlCritic\fR is a graphical interface to the
Perl::Critic \s-1CPAN\s0 module <http://search.cpan.org/perldoc?Perl::Critic>,
an \*(L"extensible framework for creating and applying coding standards to
Perl source code\*(R". The interface lets you choose and configure the
Perl::Critic::Policy modules, and run your sources through those
policies and view any violations.
Portions of this page (screenshots and toolbar descriptions) are not
available via 'perldoc'.
Please see the HTML documentation in the ActivePerl User Guide.
.SH "Profiles and Policies"
.IX Header "Profiles and Policies"
\&\fBPerlCritic\fR comes with the standard Perl::Critic::Policy modules from
\&\s-1CPAN,\s0 which are based mainly on the guidelines from Damian Conway's \fIPerl
Best Practices\fR book.
.SS "Choosing a Profile"
.IX Subsection "Choosing a Profile"
If PerlCritic is started without specifying a profile, it will attempt
to load the default profile \- a '\fI.perlcriticrc\fR' file in your \s-1HOME\s0
directory.
.PP
To create a new profile, select \fBFile|New Profile\fR (Ctrl+N).
.PP
To load a named profile (e.g. '\fIMyProject.perlcriticrc\fR') click the
\&\fBOpen profile\fR button or select \fBFile|Open Profile\fR (Ctrl+O).
.PP
To load a hidden profile (e.g. '\fI.perlcriticrc\fR') click the \fBOpen
profile directory\fR button or select \fBFile|Open Profile Directory\fR
(Ctrl+D>.
.PP
The full path to the current profile is displayed in the toolbar.
.SS "Enabling and Disabling Policies"
.IX Subsection "Enabling and Disabling Policies"
The left pane contains the Policy Tree. Use this to browse and select
the policies you want to enable in the currently loaded profile. Items
in the tree have three possible states:
.IP "\(bu" 4
\&\fBUnconfigured in profile\fR (checked, gray): The policy is enabled, but
not explicitly saved in the current profile.
.IP "\(bu" 4
\&\fBEnabled in profile\fR (checked, black): The policy is enabled explicitly
in the current profile.
.IP "\(bu" 4
\&\fBDisabled in profile\fR (unchecked, black): The policy is explicitly
disabled in the current profile.
.PP
The main policy groups have a right-click context menu with options to
Unconfigure, Enable, or Disable all policies in the group.
.SS "Policy Tree Filter"
.IX Subsection "Policy Tree Filter"
Immediately above the Policy Tree is a drop list with filter parameters
which allows you to limit the sometimes lengthy list of policies to
those of a particular conceptual group. There are two additional filter
parameters that have special functions:
.IP "\(bu" 4
\&\fBConfigured\fR: Shows policies in the tree that are configured (either
enabled or disabled) in the current profile.
.IP "\(bu" 4
\&\fBCurrent Run\fR: Shows policies which were flagged in the most recent
policy test run.
.SS "Policy Details"
.IX Subsection "Policy Details"
Double clicking on any policy item opens the configuration details and
documentation for that particular policy in the \fBDetails\fR tab.
.PP
Each module will have unique configuration options which are described
in its documentation. When the policy is in an unconfigured state
(gray), the policy options cannot be modified. When the policy is
configured either as enabled or disabled in the profile, the options
available for that policy can be modified.
.PP
The \fBSeverity\fR slider controls which severity level level the policy is
triggered at during a run (see \*(L"Running PerlCritic on Sources\*(R").
.SS "Severity"
.IX Subsection "Severity"
Each policy has a Severity setting which can be set to a value from 1
(least important) to 5 (most important) with a slider. This setting
controls which level of Strictness the policy will be included in
when the policy tests are run.
.SS "Creating Custom Policies"
.IX Subsection "Creating Custom Policies"
Documentation on creating policies for PerlCritic can be found here:
.PP
<http://search.cpan.org/dist/Perl\-Critic/lib/Perl/Critic/DEVELOPER.pod>
.SH "Running PerlCritic on Sources"
.IX Header "Running PerlCritic on Sources"
PerlCritic can be run on a single Perl file or all Perl sources in a
specified directory.
.IP "\(bu" 4
Use \fBSelect single file...\fR to chose a single file to run policy tests
on.
.IP "\(bu" 4
Use \fBSelect sources directory...\fR to specify a directory to run policy
tests on. PerlCritic will run the policy tests on all Perl files in the
directory, traversing all subdirectories recursively. \fBNote\fR:
Specifying directories with many files and/or subdirectories will
increase the amount of time a policy test run will take.
.SS "Strictness"
.IX Subsection "Strictness"
Each policy has a Severity level. Policy tests can be run with the
following levels of Strictness:
.IP "\(bu" 4
Brutal: Reports violations of any enabled policy.
.IP "\(bu" 4
Cruel: Reports violations of enabled policies with a severity setting of
2 through 5.
.IP "\(bu" 4
Harsh: Severity 3 through 5.
.IP "\(bu" 4
Stern: Severity 4 and 5.
.IP "\(bu" 4
Gentle: Severity 5 violations only.
.SS "Running a single Policy"
.IX Subsection "Running a single Policy"
To run a single policy only, right click on the policy in the Policy
Tree and select \fBRun this policy only\fR or use \fBFile|Run Selected
Policy Only\fR.
.SH "Reviewing Criticisms"
.IX Header "Reviewing Criticisms"
The \fBRun\fR tab has two main panes for displaying criticisms. When Perl
Critic is run on the specified sources, the top pane is populated with a
list of the files which have been flagged with criticisms. Each item in
the list can be expanded to show:
.IP "\(bu" 4
The criticism summary (i.e. the reason it is a policy violation).
.IP "\(bu" 4
Policy name.
.IP "\(bu" 4
The severity level of the relevant policy.
.IP "\(bu" 4
The line number of the violation.
.IP "\(bu" 4
The column number of the violation.
.PP
Criticism, severity, and line number are shown by default.
.PP
Clicking on a criticism opens the relevant code in the bottom pane. All
criticisms are inserted as highlighted text below the line containing
the violation, with a caret \*(L"^\*(R" indicating the column where the
violation occurred. Highlighting indicates the severity setting of the
policy, from light yellow (severity 1) to red (severity 5).
.PP
Double clicking on a criticism in the top pane opens the \fBDetails\fR tab
showing the policy details for that criticism.
.SS "View options"
.IX Subsection "View options"
The \fBView\fR menu contains options for displaying line numbers in the
bottom pane (useful for locating the violation), and for opening an
additional pane for displaying detailed output from last policy test run
(useful for debugging problems with policy tests).
.PP
The \fBView|Criticism Summary\fR sub-menu allows you to show or hide
columns in the criticism summary pane.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2010 ActiveState Software Inc.  All rights reserved.
